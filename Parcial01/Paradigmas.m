clear, clc

desigual = [-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

pi1 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,1,1,1,1,-1,1,1,1];

suma = [-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,-1,1,1,1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1];

sigma = [1,1,1,1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1];

raiz = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,1];

porcentaje = [1,-1,-1,-1,-1,-1,-1,1,1,1,1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,1,1,-1,1,1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,1,1,1];

lineas = [-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

teta = [-1,-1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1,1,-1,-1,-1,1,1,1,1,-1,-1];

paren = [-1,1,-1,1,-1,-1,-1,1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,-1,1];

asterisco = [1,-1,-1,1,1,-1,-1,1,1,1,-1,1,1,-1,1,1,-1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,-1,1,1,-1,1,1,-1,1,1,1,-1,-1,1,1,-1,-1,1];

mul1 = desigual(:) * desigual(:)';

mul2 = pi1(:) * pi1(:)';

mul3 = suma(:) * suma(:)';

mul4 = sigma(:) * sigma(:)';

mul5 = raiz(:) * raiz(:)';

mul6 = porcentaje(:) * porcentaje(:)';

mul7 = lineas(:) * lineas(:)';

mul8 = teta(:) * teta(:)';

mul9 = paren(:) * paren(:)';

mul10 = asterisco(:) * asterisco(:)';

w1 = mul1 + mul2 + mul3 + mul4 + mul5 + mul6 + mul7 + mul8 + mul9;


w=w1-diag(diag(w1));

%input(valor a encontrar)
x = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,1,1,1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,1];;    
    %mul sum(w * x)

u0= x;
c=1;
x
ulast=x;

while (1)
  
   u0 = u0 * w;
   u0
   
    % aplicar funcion de activacion thresold
 
   for i=1:1:80
      if u0(i) > 0
        u0(i) = 1;
      else
        u0(i) = -1;
     endif
   endfor
 % c
  %u0
  %ulast

  if (u0 == ulast)
      fprintf('Resultado encontrado: \n\n');
          
          for i=1:80
            if (u0(i)) >0
              fprintf(' %d ', u0(i))
            else
              fprintf ('   ')
            endif
            
            if (mod(i,8)) == 0
              fprintf('\n')
            endif
          endfor
          fprintf('\n')
          
          fprintf('Resultado ingresado: \n\n');
          
          for i=1:80
            if (x(i))>0
              fprintf(' %d ', x(i))
            else
              fprintf ('   ')
            endif
            
            if (mod(i,8)) == 0
              fprintf('\n')
            endif
          endfor
          fprintf('\n')

        
      fprintf ('\n Matrices recorridas hasta hallar el resultado: %d \n', c);
     break;  
  endif
    
    c = c + 1;
    ulast = u0;
   
end









































































    